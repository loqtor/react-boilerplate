// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Tout /> applies the *is-open* class & opens on button click 1`] = `
<OnClickOutside(Tout)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  id="Tout-helloWorld"
  label="Hello"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  stopPropagation={false}
>
  <Tout
    additionalClasses=""
    alertType="info"
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    icon=""
    id="Tout-helloWorld"
    isIconOnly={false}
    isInline={false}
    isToolTip={true}
    label="Hello"
    labelClassName=""
    onClick={null}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    popupClassName=""
    position="topCenter"
    preventDefault={false}
    size=""
    stopPropagation={false}
  >
    <div
      className="Tout is-open Tout--info Tout--toolTip"
      id="Tout-helloWorld"
    >
      <Button
        buttonType="button"
        className="Tout-prompt"
        disabledClass="Button is-disabled"
        icon=""
        iconClass={null}
        id={null}
        isDisabled={false}
        isFauxDisabled={false}
        isIconOnly={false}
        isLinkButton={false}
        isLoading={false}
        isRoute={false}
        label="Hello"
        onBlur={[Function]}
        onClick={[Function]}
        role={null}
        shouldOpennewTab={false}
        title=""
        url=""
        wrapperClass=""
      >
        <button
          className="Tout-prompt"
          disabled={false}
          id={null}
          onClick={[Function]}
          role={null}
          title=""
          type="button"
        >
          <span
            className=""
          >
            Hello
          </span>
        </button>
      </Button>
      <div
        aria-hidden="true"
        className="Tout-popup is-topCenter"
        role="tooltip"
      >
        Hello
      </div>
    </div>
  </Tout>
</OnClickOutside(Tout)>
`;

exports[`<Tout /> removes the *is-open* class & closes on click outside 1`] = `
<OnClickOutside(Tout)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  id="Tout-helloWorld"
  label="Hello"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  stopPropagation={false}
>
  <Tout
    additionalClasses=""
    alertType="info"
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    icon=""
    id="Tout-helloWorld"
    isIconOnly={false}
    isInline={false}
    isToolTip={true}
    label="Hello"
    labelClassName=""
    onClick={null}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    popupClassName=""
    position="topCenter"
    preventDefault={false}
    size=""
    stopPropagation={false}
  >
    <div
      className="Tout Tout--info Tout--toolTip"
      id="Tout-helloWorld"
    >
      <Button
        buttonType="button"
        className="Tout-prompt"
        disabledClass="Button is-disabled"
        icon=""
        iconClass={null}
        id={null}
        isDisabled={false}
        isFauxDisabled={false}
        isIconOnly={false}
        isLinkButton={false}
        isLoading={false}
        isRoute={false}
        label="Hello"
        onBlur={[Function]}
        onClick={[Function]}
        role={null}
        shouldOpennewTab={false}
        title=""
        url=""
        wrapperClass=""
      >
        <button
          className="Tout-prompt"
          disabled={false}
          id={null}
          onClick={[Function]}
          role={null}
          title=""
          type="button"
        >
          <span
            className=""
          >
            Hello
          </span>
        </button>
      </Button>
      <div
        aria-hidden="true"
        className="Tout-popup is-topCenter"
        role="tooltip"
      >
        Hello
      </div>
    </div>
  </Tout>
</OnClickOutside(Tout)>
`;

exports[`<Tout /> renders correctly 1`] = `
<OnClickOutside(Tout)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  id="Tout-helloWorld"
  label="Hello"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  stopPropagation={false}
>
  <Tout
    additionalClasses=""
    alertType="info"
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    icon=""
    id="Tout-helloWorld"
    isIconOnly={false}
    isInline={false}
    isToolTip={true}
    label="Hello"
    labelClassName=""
    onClick={null}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    popupClassName=""
    position="topCenter"
    preventDefault={false}
    size=""
    stopPropagation={false}
  >
    <div
      className="Tout Tout--info Tout--toolTip"
      id="Tout-helloWorld"
    >
      <p>
        World
      </p>
      <div
        aria-hidden="true"
        className="Tout-popup is-topCenter"
        role="tooltip"
      >
        Hello
      </div>
    </div>
  </Tout>
</OnClickOutside(Tout)>
`;

exports[`<Tout /> renders correctly when inline variety 1`] = `
<OnClickOutside(Tout)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  id="Tout-helloWorld"
  isInline={true}
  label="Hello"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  stopPropagation={false}
>
  <Tout
    additionalClasses=""
    alertType="info"
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    icon=""
    id="Tout-helloWorld"
    isIconOnly={false}
    isInline={true}
    isToolTip={true}
    label="Hello"
    labelClassName=""
    onClick={null}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    popupClassName=""
    position="topCenter"
    preventDefault={false}
    size=""
    stopPropagation={false}
  >
    <div
      className="Tout Tout--info Tout--inline Tout--toolTip"
      id="Tout-helloWorld"
      role="tooltip"
    >
      <span
        className="icon icon-info"
      />
      <p>
        World
      </p>
    </div>
  </Tout>
</OnClickOutside(Tout)>
`;

exports[`<Tout /> renders correctly when small variety 1`] = `
<OnClickOutside(Tout)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  id="Tout-helloWorld"
  label="Hello"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  size="small"
  stopPropagation={false}
>
  <Tout
    additionalClasses=""
    alertType="info"
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    icon=""
    id="Tout-helloWorld"
    isIconOnly={false}
    isInline={false}
    isToolTip={true}
    label="Hello"
    labelClassName=""
    onClick={null}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    popupClassName=""
    position="topCenter"
    preventDefault={false}
    size="small"
    stopPropagation={false}
  >
    <div
      className="Tout Tout--info Tout--toolTip"
      id="Tout-helloWorld"
    >
      <p>
        World
      </p>
      <div
        aria-hidden="true"
        className="Tout-popup is-topCenter"
        role="tooltip"
      >
        Hello
      </div>
    </div>
  </Tout>
</OnClickOutside(Tout)>
`;
